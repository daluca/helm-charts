---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "miniflux.fullname" . | trunc 53 | trimSuffix "-" }}-scheduler
  labels:
    {{- include "miniflux.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "miniflux.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: backend
        {{- include "miniflux.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-scheduler
          image: {{ if .Values.image.registry }}{{ .Values.image.registry }}{{ end }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}{{ if .Values.image.sha }}{{ .Values.image.sha }}{{ end }}
          imagePullPolicy: {{ default "IfNotPresent" .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          {{- if .Release.IsInstall }}
          env:
            - name: RUN_MIGRATIONS
              value: "true"
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "miniflux.fullname" . | trunc 56 | trimSuffix "-" }}-config
            - secretRef:
            {{- if and .Values.externalDatabase.enabled .Values.externalDatabase.existingSecret }}
                name: {{ .Values.externalDatabase.existingSecret }}
            {{- else }}
                name: {{ include "miniflux.fullname" . | trunc 42 | trimSuffix "-" }}-database-credentials
            {{- end }}
            {{- if .Values.secrets -}}
            - secretRef:
                name: {{ include "miniflux.fullname" . | trunc 55 | trimSuffix "-" }}-secrets
            {{- end }}
            {{- if .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
              {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ if .Values.config.BASE_URL }}/{{ trimPrefix "http://localhost/" .Values.config.BASE_URL | trimSuffix "/" }}{{ end }}/healthcheck
              port: http
          {{- with omit .Values.livenessProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ if .Values.config.BASE_URL }}/{{ trimPrefix "http://localhost/" .Values.config.BASE_URL | trimSuffix "/" }}{{ end }}/healthcheck
              port: http
          {{- with omit .Values.readinessProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ if .Values.config.BASE_URL }}/{{ trimPrefix "http://localhost/" .Values.config.BASE_URL | trimSuffix "/" }}{{ end }}/healthcheck
              port: http
          {{- with omit .Values.startupProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
