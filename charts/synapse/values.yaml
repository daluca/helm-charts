---
nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  registry: ghcr.io
  repository: element-hq/synapse
  tag: ""
  sha256: ""
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8008
  containerPort: 8008
  annotations: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
  host: example.org
  tls: true

serviceAccount:
  create: true
  name: ""
  annotations: {}

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 200m
    memory: 512Mi

livenessProbe:
  enabled: true

readinessProbe:
  enabled: false

startupProbe:
  enabled: true
  periodSeconds: 2
  failureThreshold: 30

persistence:
  enabled: false
  storageClass: ""
  size: 1Gi
  accessModes: [ReadWriteOnce]

admin:
  create: true
  username: ""
  password: ""
  # -- secret must contain the keys `username` and `password`
  existingSecret: ""

homeserver:
  server_name: localhost
  report_stats: false
  media_store_path: /synapse/media_store
  trusted_key_servers:
    - server_name: matrix.org
  macaroon_secret_key: ""
  registration_shared_secret: ""
  form_secret: ""
  existingSecret: ""

signingKey:
  enabled: false
  key: ""
  existingSecret: ""

mediaStore:
  enabled: true
  path: /synapse/media_store

logging:
  level: INFO
  handlers: [console]
  buffer:
    level: NOTSET
    location: /synapse/homeserver.log
  console:
    level: NOTSET

extraMergeVolumeMounts: []

extraVolumes: []

delegation:
  enabled: false

  replicaCount: 1

  image:
    registry: docker.io
    repository: nginx
    tag: 1.25.4-alpine
    sha256: ""
    pullPolicy: IfNotPresent

  service:
    type: ClusterIP
    port: 80
    containerPort: 80
    annotations: {}

  ingress:
    className: ""
    annotations: {}
    tls: true

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 50m
      memory: 64Mi

  livenessProbe:
    enabled: true

  readinessProbe:
    enabled: false

  startupProbe:
    enabled: true
    periodSeconds: 2
    failureThreshold: 15

  nginx:
    logHealthCheck: false
    defaultType: application/json; charset=utf-8
    cors:
      enabled: true
      origin: "*"
      headers: X-Requested-With, Content-Type, Authorization, Date
      methods: GET, HEAD, POST, PUT, DELETE, OPTIONS

database:
  type: postgresql
  external: false
  name: matrix_synapse
  host: localhost
  port: 5432
  username: synapse_user
  password: somethingSecureIPromise
  existingSecret: ""
  arguments:
    cp_min: 5
    cp_max: 10

postgresql:
  enabled: true
  auth:
    username: synapse
    password: synapse
    database: synapse
  primary:
    initdb:
      args: --lc-collate=C --lc-ctype=C
  service:
    ports:
      postgresql: 5432
