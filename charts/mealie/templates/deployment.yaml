---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: mealie
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: mealie
  template:
    metadata:
      labels:
        {{- include "common.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: mealie
      annotations:
        mealie-config-hash: {{ toJson .Values.config | sha256sum }}
    spec:
      serviceAccountName: {{ include "common.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          image: {{ include "common.vimage" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          env:
            - name: DB_ENGINE
              value: {{ .Values.database.type }}
            {{- if (eq "postgres" .Values.database.type) }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: {{ default (printf "%s-database-credentials" (include "common.fullname" .)) .Values.database.existingSecret }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{ default (printf "%s-database-credentials" (include "common.fullname" .)) .Values.database.existingSecret }}
            - name: POSTGRES_SERVER
              value: {{ ternary .Values.database.host (printf "%s-postgresql.%s" .Release.Name .Release.Namespace) .Values.database.external }}
            - name: POSTGRES_PORT
              value: {{ (ternary .Values.database.port .Values.postgresql.service.ports.postgresql .Values.database.external) | quote }}
            - name: POSTGRES_DB
              value: {{ ternary .Values.database.name .Values.postgresql.auth.database .Values.database.external }}
            {{- end }}
            {{- if .Values.extraEnvs }}
            {{- toYaml .Values.extraEnvs | nindent 12 }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-envs" (include "common.fullname" .) }}
          {{- if and (not .Values.existingSecret) (and .Values.config.OIDC_CLIENT_ID .Values.config.OIDC_CLIENT_SECRET) }}
            - secretRef:
                name: {{ printf "%s-envs" (include "common.fullname" .) }}
          {{- else if .Values.existingSecret }}
            - secretRef:
                name: {{ .Values.existingSecret }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /api/app/about
              port: http
          {{- with omit .Values.livenessProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: /api/app/about
              port: http
          {{- with omit .Values.readinessProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: /api/app/about
              port: http
          {{- with omit .Values.startupProbe "enabled" }}
            {{- toYaml . | nindent 12 -}}
          {{- end }}
          {{- end }}
          volumeMounts:
            - mountPath: /app/data
              subPath: data
              name: mealie-data
      volumes:
        - name: mealie-data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-data" (include "common.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
